!function(e){function t(t){for(var r,o,c=t[0],u=t[1],i=t[2],m=0,f=[];m<c.length;m++)o=c[m],Object.prototype.hasOwnProperty.call(a,o)&&a[o]&&f.push(a[o][0]),a[o]=0;for(r in u)Object.prototype.hasOwnProperty.call(u,r)&&(e[r]=u[r]);for(s&&s(t);f.length;)f.shift()();return l.push.apply(l,i||[]),n()}function n(){for(var e,t=0;t<l.length;t++){for(var n=l[t],r=!0,c=1;c<n.length;c++){var u=n[c];0!==a[u]&&(r=!1)}r&&(l.splice(t--,1),e=o(o.s=n[0]))}return e}var r={},a={0:0},l=[];function o(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=r,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="";var c=window.webpackJsonp=window.webpackJsonp||[],u=c.push.bind(c);c.push=t,c=c.slice();for(var i=0;i<c.length;i++)t(c[i]);var s=u;l.push([125,1]),n()}({125:function(e,t,n){n(126),e.exports=n(318)},312:function(e,t,n){},318:function(e,t,n){"use strict";n.r(t);n(312);var r=n(0),a=n.n(r),l=n(89),o=n.n(l);function c(e){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t){return!t||"object"!==c(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var d=function(e){function t(){return u(this,t),s(this,m(t).apply(this,arguments))}var n,r,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(t,e),n=t,(r=[{key:"handleOnclick",value:function(){document.getElementById("result").style.display="none",document.getElementById("promo").style.display="flex",document.getElementById("select").style.display="flex",document.getElementById("contact").style.display="flex",document.getElementById("fullNameInput").value="",document.getElementById("phoneInput").value="",document.getElementById("emailInput").value="",document.getElementById("addressInput").value="",document.getElementById("totalCostBottles").innerHTML="0&nbsp;₽",document.getElementById("resultTypeBottle").innerHTML="-",document.getElementById("resultAmountBottle").innerHTML="-",document.getElementById("resultDate").innerHTML="-",document.getElementById("resultTime").innerHTML="-",document.getElementById("resultAdrress").innerHTML="-",document.getElementById("resultPhone").innerHTML="-",document.getElementById("resultTotalCost").innerHTML="-",document.getElementById("resultOrder").innerHTML="-"}},{key:"render",value:function(){return a.a.createElement("div",null,a.a.createElement("a",{href:"#contact",onClick:this.handleOnclick.bind(this),id:"contactButton"},"Заказать воду"))}}])&&i(n.prototype,r),l&&i(n,l),t}(a.a.Component);var p=function(){return a.a.createElement("aside",{className:"promo",id:"promo"},a.a.createElement("figure",null),a.a.createElement("h1",null,"Чистая Вода"),a.a.createElement("p",null,"Питьевая вода, предназначенная для ежедневного потребления, идеально подходит для кулеров. Закажите доставку воды и мы привезем её на дом или в офис."),a.a.createElement(d,null))},y=n(124),h=n.n(y);function b(e){return(b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function E(){return(E=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e){return(v=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function k(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function B(e,t){return(B=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var O=function(e){function t(e){var n,r,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(a=v(t).call(this,e))||"object"!==b(a)&&"function"!=typeof a?k(r):a).state={fullName:{value:"",type:"text",name:"fullName"},phone:{value:"",type:"tel",name:"phone"},email:{value:"",type:"email",name:"email"},address:{value:"",type:"text",name:"address"},accept:{value:"",type:"checkbox",name:"accept"}},n.handleChange=n.handleChange.bind(k(n)),n.handleSubmit=n.handleSubmit.bind(k(n)),n.handleChecked=n.handleChecked.bind(k(n)),n}var n,r,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&B(e,t)}(t,e),n=t,(r=[{key:"handleChange",value:function(e){var t=e.target,n="checkbox"===t.type?t.checked:t.value,r=t.name;this.setState(function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}({},r,n))}},{key:"handleSubmit",value:function(e){var t=this.addressInput.value;document.getElementById("resultAdrress").innerHTML=t;var n=this.phoneInput.value;document.getElementById("resultPhone").innerHTML=n,e.preventDefault(),window.location.href="#select"}},{key:"handleChecked",value:function(){var e=document.getElementById("acceptInput");e.hasAttribute("checked")?e.removeAttribute("checked","checked"):e.setAttribute("checked","checked")}},{key:"render",value:function(){var e=this;return a.a.createElement("section",{className:"contact",id:"contact"},a.a.createElement("h2",{className:"contact-title"},"Заполните данные"),a.a.createElement("form",{className:"contact-form",onSubmit:this.handleSubmit},a.a.createElement("input",{className:"contact-input",id:"fullNameInput",type:this.state.fullName.type,value:this.state.fullName.value,name:this.state.fullName.name,pattern:"^[А-Яа-яЁё\\s]+$",placeholder:"ФИО",required:!0,maxLength:"30",minLength:"2",onChange:this.handleChange}),a.a.createElement("br",null),a.a.createElement(h.a,E({},this.props,{mask:"+7 (999) 999 99 99",maskChar:" ",className:"contact-input",id:"phoneInput",type:this.state.phone.type,value:this.state.phone.value,name:this.state.phone.name,placeholder:"Телефон",required:!0,onChange:this.handleChange,ref:function(t){return e.phoneInput=t}})),a.a.createElement("br",null),a.a.createElement("input",{className:"contact-input",id:"emailInput",type:this.state.email.type,value:this.state.email.value,name:this.state.email.name,pattern:"[^@\\s]+@[^@\\s]+",placeholder:"voda@mail.ru",required:!0,maxLength:"20",minLength:"6",onChange:this.handleChange}),a.a.createElement("br",null),a.a.createElement("input",{className:"contact-input",id:"addressInput",type:this.state.address.type,value:this.state.address.value,name:this.state.address.name,placeholder:"Адрес доставки",required:!0,maxLength:"50",minLength:"10",onChange:this.handleChange,ref:function(t){return e.addressInput=t}}),a.a.createElement("br",null),a.a.createElement("p",{className:"contact-input--checkbox"},a.a.createElement("input",{type:this.state.accept.type,name:this.state.accept.name,id:"acceptInput",required:!0,onClick:function(t){return e.handleChecked(t)}}),a.a.createElement("label",{htmlFor:"acceptInput",className:"material-icons"},a.a.createElement("span",null,"Я согласен на ",a.a.createElement("a",{href:""},"обработку персональных",a.a.createElement("wbr",null),"данных")))),a.a.createElement("button",{className:"contact-button"},"Далее")))}}])&&g(n.prototype,r),l&&g(n,l),t}(a.a.Component),I=n.p+"images/bottle-big.png",_=n.p+"images/bottle-average.png",w=n.p+"images/bottle-small.png";function C(e){return(C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function N(e){return(N=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function S(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function j(e,t){return(j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var P=function(e){function t(e){var n,r,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(a=N(t).call(this,e))||"object"!==C(a)&&"function"!=typeof a?S(r):a).handleChange=n.handleChange.bind(S(n)),n.handleSubmit=n.handleSubmit.bind(S(n)),n}var n,r,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&j(e,t)}(t,e),n=t,(r=[{key:"handleChange",value:function(e){var t=e.target,n=("radio"===t.type?t.checked:t.value,t.name);this.setState(function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}({},n,e.target.value));var r=this.bottleBig,a=this.bottleAverage,l=this.bottleSmall,o=document.getElementById("amount-bottles");r.checked?(o.setAttribute("class","select-form--amounts__bottles left"),this.bottleBig.setAttribute("checked","checked"),this.bottleAverage.removeAttribute("checked","checked"),this.bottleSmall.removeAttribute("checked","checked")):a.checked?(o.setAttribute("class","select-form--amounts__bottles right"),this.bottleBig.removeAttribute("checked","checked"),this.bottleAverage.setAttribute("checked","checked"),this.bottleSmall.removeAttribute("checked","checked")):l.checked?(o.setAttribute("class","select-form--amounts__bottles righter"),this.bottleBig.removeAttribute("checked","checked"),this.bottleAverage.removeAttribute("checked","checked"),this.bottleSmall.setAttribute("checked","checked")):o.setAttribute("class","select-form--amounts__bottles")}},{key:"handleSubmit",value:function(e){e.preventDefault()}},{key:"render",value:function(){var e=this;return a.a.createElement("form",{className:"select-form--bottles",name:"type-bottles",id:"typeBottles"},a.a.createElement("input",{className:"type-bottle-input",type:"radio",id:"bottleBig",name:"bottles",value:"18,9",onChange:this.handleChange,ref:function(t){return e.bottleBig=t}}),a.a.createElement("label",{htmlFor:"bottleBig"},a.a.createElement("img",{src:I})),a.a.createElement("input",{className:"type-bottle-input",type:"radio",id:"bottleAverage",name:"bottles",value:"1,5",onChange:this.handleChange,ref:function(t){return e.bottleAverage=t}}),a.a.createElement("label",{htmlFor:"bottleAverage"},a.a.createElement("img",{src:_})),a.a.createElement("input",{className:"type-bottle-input",type:"radio",id:"bottleSmall",name:"bottles",value:"0,5",onChange:this.handleChange,ref:function(t){return e.bottleSmall=t}}),a.a.createElement("label",{htmlFor:"bottleSmall"},a.a.createElement("img",{src:w})))}}])&&T(n.prototype,r),l&&T(n,l),t}(a.a.Component);function L(e){return(L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function H(e){return(H=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function x(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function A(e,t){return(A=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var D=function(e){function t(e){var n,r,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(a=H(t).call(this,e))||"object"!==L(a)&&"function"!=typeof a?x(r):a).state={count:0},n.handleClickPlus=n.handleClickPlus.bind(x(n)),n.handleClickMinus=n.handleClickMinus.bind(x(n)),n.handleChange=n.handleChange.bind(x(n)),n}var n,r,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&A(e,t)}(t,e),n=t,(r=[{key:"handleChange",value:function(e){}},{key:"handleClickPlus",value:function(){this.state.count<12&&this.setState({count:this.state.count+1});for(var e=document.getElementById("typeBottles"),t=document.getElementById("amountBottle"),n=Number(t.value)+1,r=0;r<e.length;r++){var a=e[r];if(a.checked){var l=a.value,o=document.getElementById("totalCostBottles");n<13&&("18,9"==l?o.innerHTML=(220*n).toFixed(2)+" ₽":"1,5"==l?o.innerHTML=(175*n).toFixed(2)+" ₽":"0,5"==l&&(o.innerHTML=(270*n).toFixed(2)+" ₽"))}}}},{key:"handleClickMinus",value:function(){this.state.count>0&&this.setState({count:this.state.count-1});for(var e=document.getElementById("typeBottles"),t=document.getElementById("amountBottle"),n=Number(t.value)-1,r=0;r<e.length;r++){var a=e[r];if(a.checked){var l=a.value,o=document.getElementById("totalCostBottles");n>=0&&("18,9"==l?o.innerHTML=(220*n).toFixed(2)+" ₽":"1,5"==l?o.innerHTML=(175*n).toFixed(2)+" ₽":"0,5"==l&&(o.innerHTML=(270*n).toFixed(2)+" ₽"))}}}},{key:"render",value:function(){return a.a.createElement("div",{className:"select-form--amounts"},a.a.createElement("form",{className:"select-form--amounts__bottles",name:"amount-bottles",id:"amount-bottles"},a.a.createElement("span",{className:"minus",onClick:this.handleClickMinus},"-"),a.a.createElement("input",{type:"text",value:this.state.count,name:"amountBottle",id:"amountBottle",onChange:this.handleChange}),a.a.createElement("span",{className:"plus",onClick:this.handleClickPlus},"+")),a.a.createElement("div",{className:"select-total"},a.a.createElement("h2",{className:"select-title"},"Итого"),a.a.createElement("p",{id:"totalCostBottles"},"0",a.a.createElement("span",null," ₽"))))}}])&&M(n.prototype,r),l&&M(n,l),t}(a.a.Component);function F(e){return(F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function q(e){return(q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function J(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function $(e,t){return($=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var z=function(e){function t(e){var n,r,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(a=q(t).call(this,e))||"object"!==F(a)&&"function"!=typeof a?J(r):a).handleClickDay=n.handleClickDay.bind(J(n)),n.handleClickTime=n.handleClickTime.bind(J(n)),n}var n,r,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&$(e,t)}(t,e),n=t,(r=[{key:"handleClickDay",value:function(){var e,t=document.getElementById("selectDate");t.addEventListener("click",(function(t){for(var n=t.target;n!=this;){if("select-date-day"==n.className)return r=n,e&&e.classList.remove("checked-date"),void(e=r).classList.add("checked-date");n=n.parentNode}var r}));for(var n=t.getElementsByClassName("checked-date"),r=0;r<n.length;r++){var a=n[r].getElementsByTagName("p")[1].innerHTML,l=document.getElementById("selectTime"),o=l.getElementsByClassName("select-time-part")[0];"сб"==a||"вс"==a?(o.style.display="none",l.style.justifyContent="left"):(o.style.display="flex",l.style.justifyContent="space-between")}}},{key:"handleClickTime",value:function(){var e;document.getElementById("selectTime").addEventListener("click",(function(t){for(var n=t.target;n!=this;){if("select-time-part"==n.className)return r=n,e&&e.classList.remove("checked-time"),void(e=r).classList.add("checked-time");n=n.parentNode}var r}))}},{key:"render",value:function(){return a.a.createElement("div",{className:"select-form--datetime"},a.a.createElement("h2",{className:"select-title select-title--datetime"},"Дата и время доставки"),a.a.createElement("h3",{className:"select-subtitle"},"День"),a.a.createElement("div",{className:"select-date",onClick:this.handleClickDay,id:"selectDate"},a.a.createElement("p",{className:"select-date-day"},a.a.createElement("p",null,"10"),a.a.createElement("p",null,"пн")),a.a.createElement("p",{className:"select-date-day"},a.a.createElement("p",null,"11"),a.a.createElement("p",null,"вт")),a.a.createElement("p",{className:"select-date-day"},a.a.createElement("p",null,"12"),a.a.createElement("p",null,"ср")),a.a.createElement("p",{className:"select-date-day"},a.a.createElement("p",null,"13"),a.a.createElement("p",null,"чт")),a.a.createElement("p",{className:"select-date-day"},a.a.createElement("p",null,"14"),a.a.createElement("p",null,"пт")),a.a.createElement("p",{className:"select-date-day"},a.a.createElement("p",null,"15"),a.a.createElement("p",null,"сб")),a.a.createElement("p",{className:"select-date-day"},a.a.createElement("p",null,"16"),a.a.createElement("p",null,"вс")),a.a.createElement("p",{className:"select-date-day"},a.a.createElement("p",null,"17"),a.a.createElement("p",null,"пн"))),a.a.createElement("h3",{className:"select-subtitle"},"Время"),a.a.createElement("div",{className:"select-time",id:"selectTime",onClick:this.handleClickTime},a.a.createElement("p",{className:"select-time-part"},a.a.createElement("span",null,"10:00 - 11:00")),a.a.createElement("p",{className:"select-time-part"},a.a.createElement("span",null,"12:00 - 13:00")),a.a.createElement("p",{className:"select-time-part"},a.a.createElement("span",null,"15:00 - 16:00"))))}}])&&R(n.prototype,r),l&&R(n,l),t}(a.a.Component);function G(e){return(G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function K(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Q(e){return(Q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function U(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function V(e,t){return(V=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var W=function(e){function t(e){var n,r,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(a=Q(t).call(this,e))||"object"!==G(a)&&"function"!=typeof a?U(r):a).state={count:0},n.handleChange=n.handleChange.bind(U(n)),n.handleSubmit=n.handleSubmit.bind(U(n)),n.handleReturn=n.handleReturn.bind(U(n)),n}var n,r,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&V(e,t)}(t,e),n=t,(r=[{key:"handleChange",value:function(e){var t=e.target,n=("radio"===t.type?t.checked:t.value,t.name);this.setState(function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}({},n,e.target.value));var r=this.bottleBig.checked,a=this.bottleAverage.checked,l=this.bottleSmall.checked,o=document.getElementById("amount-bottles");r?o.setAttribute("class","select-form--amounts__bottles left"):a?o.setAttribute("class","select-form--amounts__bottles right"):l?o.setAttribute("class","select-form--amounts__bottles righter"):o.setAttribute("class","select-form--amounts__bottles")}},{key:"handleSubmit",value:function(e){for(var t,n=document.getElementById("emailInput").value,r=document.getElementById("fullNameInput").value,a=document.getElementById("addressInput").value,l=document.getElementById("phoneInput").value,o=document.getElementById("acceptInput"),c=document.getElementById("amountBottle").value,u=document.getElementById("bottleBig").checked,i=document.getElementById("bottleAverage").checked,s=document.getElementById("bottleSmall").checked,m=document.getElementById("selectTime"),f=m.getElementsByTagName("p"),d=0;d<f.length;d++)f[d].classList.contains("checked-time")&&(t=!0);for(var p,y=document.getElementById("selectDate").getElementsByClassName("select-date-day"),h=0;h<y.length;h++)y[h].classList.contains("checked-date")&&(p=!0);if(n&&r&&a&&l&&o.hasAttribute("checked")&&"0"!=c&&(u||i||s)&&t&&p){for(var b=document.getElementById("typeBottles"),E=0;E<b.length;E++){var g=b[E];if(g.checked){var v=g.value;document.getElementById("resultTypeBottle").innerHTML=v,"18,9"==v?document.getElementById("resultAmountBottle").innerHTML=c:"1,5"==v?document.getElementById("resultAmountBottle").innerHTML=6*c:"0,5"==v&&(document.getElementById("resultAmountBottle").innerHTML=12*c)}}var k=document.getElementById("resultTotalCost"),B=document.getElementById("resultTypeBottle");"18,9"==B.innerHTML?k.innerHTML=(220*c).toFixed(2):"1,5"==B.innerHTML?k.innerHTML=(175*c).toFixed(2):"0,5"==B.innerHTML&&(k.innerHTML=(270*c).toFixed(2));for(var O=document.getElementById("selectDate").getElementsByClassName("checked-date"),I=0;I<O.length;I++){var _=O[I].getElementsByTagName("p")[0].innerHTML;document.getElementById("resultDate").innerHTML=_}for(var w=m.getElementsByClassName("checked-time"),C=0;C<w.length;C++){var T=w[C].getElementsByTagName("span")[0].innerHTML;document.getElementById("resultTime").innerHTML=T}document.getElementById("resultAdrress").innerHTML=a,document.getElementById("resultPhone").innerHTML=l,document.getElementById("resultOrder").innerText=Math.floor(300*Math.random())+1,document.getElementById("select").style.display="none",document.getElementById("contact").style.display="none",document.getElementById("result").style.display="flex",window.location.href="#result"}else alert("Пожалуйста, выбирите все необходимые пункты и заполните все поля.");e.preventDefault()}},{key:"handleReturn",value:function(){window.location.href="#contact"}},{key:"render",value:function(){return a.a.createElement("section",{className:"select",id:"select"},a.a.createElement("div",{className:"select-link"},a.a.createElement("a",{href:"#contact",onClick:this.handleReturn},a.a.createElement("i",{className:"material-icons"},"keyboard_arrow_left"))),a.a.createElement("h2",{className:"select-title"},"Вода"),a.a.createElement("div",{className:"choice-bottle"},a.a.createElement(P,null),a.a.createElement(D,null)),a.a.createElement(z,null),a.a.createElement("button",{className:"select-button",onClick:this.handleSubmit,id:"selectButton"},"Заказать воду"))}}])&&K(n.prototype,r),l&&K(n,l),t}(a.a.Component);function X(e){return(X="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Y(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ee(e,t){return!t||"object"!==X(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function te(e){return(te=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ne(e,t){return(ne=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var re=function(e){function t(){return Y(this,t),ee(this,te(t).apply(this,arguments))}var n,r,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ne(e,t)}(t,e),n=t,(r=[{key:"render",value:function(){return a.a.createElement("div",{className:"result-info"},a.a.createElement("div",{className:"result-info--main"},a.a.createElement("ul",{className:"result-info--list"},a.a.createElement("li",{className:"result-info--item"},a.a.createElement("h3",null,"Бутыль ",a.a.createElement("span",{id:"resultTypeBottle"},"-")," л"),a.a.createElement("p",null,a.a.createElement("span",{id:"resultAmountBottle"},"-")," шт")),a.a.createElement("li",{className:"result-info--item"},a.a.createElement("h3",null,a.a.createElement("span",{id:"resultDate"},"-")," февраля"),a.a.createElement("p",null,a.a.createElement("span",{id:"resultTime"},"-"))),a.a.createElement("li",{className:"result-info--item"},a.a.createElement("h3",null,"Адрес доставки"),a.a.createElement("p",null,a.a.createElement("span",{id:"resultAdrress"}))),a.a.createElement("li",{className:"result-info--item"},a.a.createElement("h3",null,"Телефон"),a.a.createElement("p",null,a.a.createElement("span",{id:"resultPhone"}))))),a.a.createElement("div",{className:"result-total"},a.a.createElement("h2",{className:"result-title"},"Итого"),a.a.createElement("p",null,a.a.createElement("span",{id:"resultTotalCost"},"-")," ₽")))}}])&&Z(n.prototype,r),l&&Z(n,l),t}(a.a.Component);function ae(e){return(ae="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function le(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function oe(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ce(e,t){return!t||"object"!==ae(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ue(e){return(ue=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ie(e,t){return(ie=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var se=function(e){function t(){return le(this,t),ce(this,ue(t).apply(this,arguments))}var n,r,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ie(e,t)}(t,e),n=t,(r=[{key:"handleOnclick",value:function(){document.getElementById("result").style.display="none",document.getElementById("promo").style.display="flex",document.getElementById("select").style.display="flex",document.getElementById("contact").style.display="flex",window.location.href="#promo",document.getElementById("fullNameInput").value="",document.getElementById("phoneInput").value="",document.getElementById("emailInput").value="",document.getElementById("addressInput").value="",document.getElementById("totalCostBottles").innerHTML="0&nbsp;₽",document.getElementById("resultTypeBottle").innerHTML="-",document.getElementById("resultAmountBottle").innerHTML="-",document.getElementById("resultDate").innerHTML="-",document.getElementById("resultTime").innerHTML="-",document.getElementById("resultAdrress").innerHTML="-",document.getElementById("resultPhone").innerHTML="-",document.getElementById("resultTotalCost").innerHTML="-",document.getElementById("resultOrder").innerHTML="-"}},{key:"render",value:function(){return a.a.createElement("section",{className:"result",id:"result",style:{display:"none"}},a.a.createElement("div",{className:"result-header"},a.a.createElement("a",{className:"result-link",href:"#select"},a.a.createElement("i",{className:"material-icons"},"check")),a.a.createElement("h2",{className:"result-title"},"Заказ оформлен")),a.a.createElement(re,null),a.a.createElement("p",{className:"result-message"},"Ваш заказ ",a.a.createElement("span",null,"№",a.a.createElement("span",{id:"resultOrder"},"-"))," успешно оформлен. В ближайшее время по указанному телефону с Вами свяжется наш менеджер."),a.a.createElement("button",{className:"result-button",onClick:this.handleOnclick.bind(this)},"Новый заказ"))}}])&&oe(n.prototype,r),l&&oe(n,l),t}(a.a.Component);function me(e){return(me="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function fe(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function de(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function pe(e,t){return!t||"object"!==me(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ye(e){return(ye=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function he(e,t){return(he=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var be=function(e){function t(){return fe(this,t),pe(this,ye(t).apply(this,arguments))}var n,r,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&he(e,t)}(t,e),n=t,(r=[{key:"render",value:function(){return a.a.createElement("article",{id:"main-article",className:"main-article"},a.a.createElement("section",{id:"main-aside",className:"main-aside"},a.a.createElement(p,null)),a.a.createElement("br",null),a.a.createElement("section",{id:"main-container",className:"main-container"},a.a.createElement(O,null),a.a.createElement("br",null),a.a.createElement(W,null),a.a.createElement("br",null),a.a.createElement(se,null)))}}])&&de(n.prototype,r),l&&de(n,l),t}(a.a.Component);o.a.render(a.a.createElement(be,null),document.getElementById("root"))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,